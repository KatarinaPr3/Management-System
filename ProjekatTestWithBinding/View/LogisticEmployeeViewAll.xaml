<UserControl x:Class="ProjekatTestWithBinding.View.LogisticEmployeeViewAll"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProjekatTestWithBinding.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Background="#0f0f2d">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1" Grid.ColumnSpan="3">
            <Grid Grid.Row="2" Background="#0f0f2d">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="Back" Command="{Binding BackCommand}" BorderThickness="0"  Width="100" Foreground="White" Background="#0f0f2d" FontSize="16"/>
                    <Button Content="Logout" Command="{Binding LogoutCommand}" BorderThickness="0"  Width="100" Foreground="White" Background="#0f0f2d" FontSize="16"/>

                </StackPanel>


            </Grid>
        </Grid>
        <DataGrid x:Name="DataGridShippers" ItemsSource="{Binding Shippers}" AutoGenerateColumns="False" Background="#fff" Margin="25" SelectedItem="{Binding SelectedShipper}" CanUserAddRows="False">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Pink"/>
                    <Setter Property="BorderThickness" Value="0,0,1,2"/>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID"  Binding="{Binding shipperid}" IsReadOnly="True" Width="*"/>
                <DataGridTextColumn Header="Company Name" Binding="{Binding companyname}" Width="*"/>
                <DataGridTextColumn Header="Phone" Binding="{Binding phone}" Width="*"/>
            </DataGrid.Columns>
        </DataGrid>
        <StackPanel Orientation="Vertical" Grid.Column="1" VerticalAlignment="Center">
            <Button Command="{Binding UpdateShipperCommand}" Width="200" Height="40" Content="Update" Margin="0 5">
                <!--#region Button style-->
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="White"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="15,15,15,15" BorderBrush="#ccc" Background="White" BorderThickness="0,1,1,0" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
                <!--#endregion Button style-->
            </Button>
            <Button Command="{Binding DeleteShipperCommand}"  Width="200" Height="40" Content="Delete" Margin="0 5">
                <!--#region Button style-->
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Pink"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="15,15,15,15" BorderBrush="#ccc" Background="Pink" BorderThickness="0,1,1,0" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
                <!--#endregion Button style-->
            </Button>
        </StackPanel>
        <Canvas Margin="184,20,-260,-20" Grid.Column="1">
            <Border Width="500" CornerRadius="10" Background="Pink" Height="15" VerticalAlignment="Top" HorizontalAlignment="Right" Panel.ZIndex="2" Canvas.Left="33" Canvas.Top="70">
                <Border.RenderTransform>
                    <RotateTransform Angle="45"/>
                </Border.RenderTransform>
            </Border>
            <Border Width="500" CornerRadius="10" Background="Pink" Height="15" VerticalAlignment="Top" HorizontalAlignment="Right" Opacity="0.5" Canvas.Left="28" Canvas.Top="30">
                <Border.RenderTransform>
                    <RotateTransform Angle="45"/>
                </Border.RenderTransform>
            </Border>
            <Border Width="500" CornerRadius="10" Background="White" Height="15" VerticalAlignment="Top" HorizontalAlignment="Right" Opacity="1" Canvas.Left="23" Canvas.Top="-10">
                <Border.RenderTransform>
                    <RotateTransform Angle="45"/>
                </Border.RenderTransform>
            </Border>
        </Canvas>
        <Canvas Margin="277,250,-353,-250" Grid.Column="1">
            <Border Width="500" CornerRadius="10" Background="Pink" Height="15" Margin="0,95,-445,0" VerticalAlignment="Top" HorizontalAlignment="Right" Panel.ZIndex="2">
                <Border.RenderTransform>
                    <RotateTransform Angle="120"/>
                </Border.RenderTransform>
            </Border>
            <Border Width="500" CornerRadius="10" Background="Pink" Height="15" VerticalAlignment="Top" HorizontalAlignment="Right" Opacity="0.5" Canvas.Left="1" Canvas.Top="45">
                <Border.RenderTransform>
                    <RotateTransform Angle="120"/>
                </Border.RenderTransform>
            </Border>
            <Border Width="500" CornerRadius="10" Background="White" Height="15" Margin="0,-3,-445,0" VerticalAlignment="Top" HorizontalAlignment="Right" Opacity="1">
                <Border.RenderTransform>
                    <RotateTransform Angle="120"/>
                </Border.RenderTransform>
            </Border>
        </Canvas>

    </Grid>
</UserControl>
